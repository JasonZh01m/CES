<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="  
    http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.0.xsd
    ">
    
    <bean id="appContextUtil" class="com.sq.core.utils.AppContextUtil" />

	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:config/*.properties" />
	
	<util:properties id="propertiesReader" location="classpath:config/verifyKey.properties" /> 

	<context:component-scan base-package="com">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	
	
	
	<!--druid数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close" lazy-init="true">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="defaultAutoCommit" value="false" />
		<property name="maxActive" value="50" />  
        <property name="initialSize" value="1" />  
        <property name="maxWait" value="60000" />  
        <property name="minIdle" value="1" />  
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="select 1" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="useUnfairLock" value="true" />
      <property name="poolPreparedStatements" value="false" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	</bean>


	<!--创建tomcat7数据源
	 <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="java:comp/env/jdbc/OraDB"/> </bean>
 -->
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:config/sqlMapConfig.xml"/>
		<property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
	</bean>

	<bean id="sqlSessionTemp" class="org.mybatis.spring.SqlSessionTemplate" >
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	 <!-- mybatis.spring自动映射
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sq.sso.dao"/>
    </bean> -->

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="transactionManagerAdivice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="deal*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="register*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="create*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="init*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="del*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="modify*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="add*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="apply*" propagation="REQUIRED"
				rollback-for="java.lang.RuntionException" />
			<tx:method name="*"  propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!--把事务控制在Service层 -->
	<aop:config>
		<aop:pointcut id="pc"
			expression="execution(* com.*.*.service.*.*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="transactionManagerAdivice" order="1" />
	</aop:config>
	
	<bean id="loginInfoService" class="com.sq.sso.service.impl.LoginInfoServiceImpl">
	  <!-- <property name="cache" ref="L2_Cache" />-->
	   <property name="gc" ref="generalCacheUtils" />
	   <property name="errorNum" value="3" ></property>
	</bean>
	
	<import resource="applicationContext-mvc.xml"/>
	<import resource="applicationContext-cache.xml"/>
	
</beans>  