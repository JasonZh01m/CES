<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Permission">

	<resultMap type="com.sq.sso.model.Permission" id="permissionMap">	
	 <result property="id" column="id" />
	 <result property="name" column="name" />
	 <result property="code" column="code" />
	 <result property="resourceString" column="resource_string" />
	 <result property="type" column="type" />
	 <result property="sysId" column="sys_id" />
	 <result property="orderIndex" column="order_index" />
	 <result property="iconUri" column="icon_uri" /> 
	 <result property="parentId" column="parent_id" />
	</resultMap>

	<sql id="sql_where">
		<if test="id!=null and id>0">
			and id = #{id}
		</if>
		<if test="name!=null and name!=''">
			and name = #{name}
		</if>
		<if test="code!=null and code!=''">
			and code = #{code}
		</if>
		<if test="type!=null and type>-1">
			and type = #{type}
		</if>
		<if test="parentId!=null and parentId>-1">
			and parent_id = #{parentId}
		</if>
	</sql>
	
	<select id="iteratorPid" parameterType="com.sq.sso.model.Permission" resultType="_int">
		select id from tb_permission where parent_id=#{parentId}
	</select>
	
	<select id="iterator" parameterType="com.sq.sso.model.Permission" resultType="_int">
		select id from tb_permission 
		<where>
			<include refid="sql_where" />
		</where>
	</select>
	


	<select id="count" parameterType="com.sq.sso.model.Permission"
		resultType="_int">
		select count(1) from tb_permission
		<where>
			<include refid="sql_where" />
		</where>
	</select>
	
   <select id="querySysId" parameterType="string" resultType="_int">
		<!-- select sys_id from tb_permission where resource_string like '%'||#{resourceString}||'%' group by sys_id -->
	 select id from tb_system where context_path=#{resourceString}
	</select>
	
	

   <select id="queryByResSys" parameterType="com.sq.sso.model.Permission" resultMap="permissionMap">
		select * from tb_permission 
		<where>
		<if test="resourceString!=null and resourceString!=''">
		and resource_string=#{resourceString}
		</if>
		<if test="sysId>0">
		and sys_id=#{sysId}
		</if>
		</where>
		order by id
	</select>


	<select id="queryById" parameterType="int" resultMap="permissionMap">
		select *
		from tb_permission where Id=#{id}
	</select>

	<select id="queryPermissionByRole" parameterType="com.sq.sso.model.Role" resultMap="permissionMap">
		select * from tb_permission r
		inner join tb_permission_role_relation rr on r.id = rr.permission_id
		where rr.role_id=#{id} 
	</select>
	
	<select id="queryPermissionByRoleIdAndType" parameterType="int" resultMap="permissionMap">
		select * from tb_permission r
		inner join tb_permission_role_relation rr on r.id = rr.permission_id
		where rr.role_id=#{id} and r.parent_id = 0
	</select>

     <select id="queryMainPagesByRole" parameterType="com.sq.sso.model.Role" resultType="string">
		select sys_resource_string from tb_system_node where sys_id in (
  			select p.sys_id from (select permission_id from tb_permission_role_relation  where role_id=#{id}) pr 
  				left join tb_permission p on p.id=pr.permission_id  group by p.sys_id
    	)
	</select>
	
	<select id="queryMainPages"  resultType="string">
		select sys_resource_string from tb_system_node 
	</select>
	
	
	
	

	<select id="queryAllPermissionByPid" parameterType="string" resultMap="permissionMap">
		select * from tb_permission r where r.parent_id=#{parentId}
	</select>

	<select id="queryResourceString" parameterType="string" resultType="int">
		select 1 from tb_permission where resource_string = #{resourceString}
	</select>
	
	<select id="queryAllPermission" parameterType="com.sq.sso.model.Permission" resultMap="permissionMap">
		select * from tb_permission  
		<where>
			<include refid="sql_where" />
		</where>
	</select>
	
	<insert id="save" parameterType="com.sq.sso.model.Permission" useGeneratedKeys="true" keyProperty="id"  keyColumn="id">
		insert into tb_permission
		(name,code,resource_string,type,sys_id,order_index,icon_uri,parent_id)
		values
		(#{name},#{code},#{resourceString},#{type},#{sysId},#{orderIndex},#{iconUri,jdbcType=VARCHAR},#{parentId})
	</insert>
	
	<update id="updateById" parameterType="com.sq.sso.model.Permission">
		update tb_permission
		<set>
			<if test="name!=null and name!=''">
				name = #{name},
			</if>
			<if test="code!=null and code!=''">
				code = #{code},
			</if>
			<if test="resourceString!=null and resourceString!=''">
				resource_string = #{resourceString},
			</if>
			<if test="type!=-1">
				type = #{type},
			</if>
			<if test="sysId!=null and sysId!=''">
				sys_id = #{sysId},
			</if>
			<if test="orderIndex!=null and orderIndex>-1">
				order_index = #{orderIndex},
			</if>
			<if test="iconUri!=null and iconUri!=''">
				icon_uri = #{iconUri},
			</if>
			<if test="parentId!=null">
				PARENT_ID= #{parentId}
			</if>
		</set>
		where id=#{id}
	</update>
	
	<delete id="deleteById" parameterType="int">
		delete from tb_permission where id = #{id}
	</delete>
	
	<delete id="deleteByResourceString" parameterType="string">
		delete from tb_permission where resource_string = #{resourceString}
	</delete>
	
	<delete id="deleteRolePermissionByResourceString" parameterType="string">
		delete from tb_permission_role_relation where PERMISSION_ID in ( select id from tb_permission where resource_string = #{resourceString} )
	</delete>
		
	<select id="queryChildPermission" parameterType="java.util.Map" resultMap="permissionMap">
		select tp.* from tb_permission tp
		inner join tb_permission_role_relation tprr on tp.id=tprr.permission_id
		where tprr.role_id=#{roleId} and tp.type=#{type} and tp.parent_id = (select id from tb_permission where resource_string=#{resourceString})
	</select>
	
	<select id="queryAllLinkPermissionByPid" parameterType="string" resultMap="permissionMap">
		select * from tb_permission r where r.parent_id=#{parentId} and r.type=0
	</select>
	<select id="queryAllPermissionByUserId" parameterType="string" resultMap="permissionMap">
		select p.* from tb_permission p
			inner join tb_permission_role_relation prr on p.id = prr.permission_id
			inner join tb_user_role_relation urr on prr.role_id=urr.role_id
			inner join tb_user u on urr.user_id = u.id
			where u.id=#{userId}
			order by p.id
	</select>
</mapper>